meta:
  gh-status_handlers: &gh-status-handlers
    on_success:
      put: gh-status
      inputs: [concourse-ci-test]
      params: {state: success}
    on_failure:
      put: gh-status
      inputs: [concourse-ci-test]
      params: {state: failure}
    on_error:
      put: gh-status
      inputs: [concourse-ci-test]
      params: {state: error}


resource_types:
# This manages the GitHub status lines
- name: cogito
  type: registry-image
  check_every: 1h
  source:
    repository: pix4d/cogito


resources:
- name: concourse-ci-test
  type: git
  icon: github
  source:
    uri: https://github.com/tgolsson/concourse-ci-test

  webhook_token: concourse-ci-test-trigger
  paths:
  - Cargo.lock
  - Cargo.toml
  - .concourse/primary-rust.yml
  - src/**


# This is the status object that will be updated in each job
- name: gh-status
  type: cogito
  check_every: 1h
  source:
    owner: tgolsson
    repo: concourse-ci-test
    access_token: ((status-token))

jobs:
- name: test
  public: true

  <<: *gh-status-handlers
  plan:
  - get: concourse-ci-test
    trigger: true

  - put: gh-status
    inputs: [concourse-ci-test]
    params: {state: pending}

  - task: test
    config:
      platform: linux
      image_resource:
        type: registry-image
        source: { repository: docker.io/library/rust }

      run:
        path: cargo
        args: ["test"]
        dir: concourse-ci-test

      inputs:
      - name: concourse-ci-test

- name: build
  public: true

  <<: *gh-status-handlers
  plan:
  - get: concourse-ci-test
    trigger: true

  - put: gh-status
    inputs: [concourse-ci-test]
    params: {state: pending}

  - task: build
    config:
      platform: linux
      image_resource:
        type: registry-image
        source: { repository: docker.io/library/rust }

      run:
        path: cargo
        args: ["build"]
        dir: concourse-ci-test

      inputs:
      - name: concourse-ci-test

- name: clippy
  public: true
  <<: *gh-status-handlers
  plan:
  - get: concourse-ci-test
    trigger: true

  - put: gh-status
    inputs: [concourse-ci-test]
    params: {state: pending}

  - task: clippy
    config:
      platform: linux
      image_resource:
        type: registry-image
        source: { repository: docker.io/library/rust }

      run:
        path: bash
        args:
        - -c
        - |
          rustup component add clippy
          cargo clippy
        dir: concourse-ci-test

      inputs:
      - name: concourse-ci-test

- name: rustfmt
  public: true
  <<: *gh-status-handlers
  plan:
  - get: concourse-ci-test
    trigger: true

  - put: gh-status
    inputs: [concourse-ci-test]
    params: {state: pending}

  - task: fmt
    config:
      platform: linux
      image_resource:
        type: registry-image
        source: { repository: docker.io/library/rust }

      run:
        path: bash
        args:
        - -c
        - |
          rustup component add rustfmt
          cargo fmt -- --check
        dir: concourse-ci-test

      inputs:
      - name: concourse-ci-test
