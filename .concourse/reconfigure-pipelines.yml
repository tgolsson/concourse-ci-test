meta:
  gh-status_handlers: &gh-status-handlers
    on_success:
      put: gh-status
      inputs: [phatik]
      params: {state: success}
    on_failure:
      put: gh-status
      inputs: [phatik]
      params: {state: failure}
    on_error:
      put: gh-status
      inputs: [phatik]
      params: {state: error}


resource_types:
# This manages the top-level webhook trigger
- name: github-webhook-resource
  type: registry-image
  source:
    repository: homedepottech/github-webhook-resource
    tag: latest


# This manages the GitHub status lines
- name: cogito
  type: registry-image
  check_every: 1m
  source:
    repository: ((harbor.image-repo-name))/cogito
    username: ((harbor.registry-username))
    password: ((harbor.registry-password))
    tag: latest

resources:
# This is our Git Repository
- name: phatik
  type: git
  icon: github
  source:
    uri: https://github.com/tgolsson/phatik
  # NOT a secret, used to map webhooks -> checks
  webhook_token: phatik

# This is the status object that will be updated in each job
- name: gh-status
  type: cogito
  check_every: 1h
  source:
    owner: tgolsson
    repo: phatik
    access_token: ((status-token))
    context_namespace: controller

# This is the webhook resource that we'll set each time
- name: github-webhook
  type: github-webhook-resource
  source:
    github_api: https://api.github.com
    github_token: ((webhook-token))

# These are the jobs that run in parallel
jobs:
- name: configure-webhook
  <<: *gh-status-handlers
  plan:
  - get: phatik
    trigger: true

  - put: gh-status
    inputs: [phatik]
    params: {state: pending}

  - put: create-webhook
    resource: github-webhook
    params:
      org: tgolsson
      repo: phatik
      resource_name: phatik
      webhook_token: phatik
      operation: create
      events: [push, pull_request]

- name: configure-controller
  <<: *gh-status-handlers
  plan:
  - get: phatik
    trigger: true

  - put: gh-status
    inputs: [phatik]
    params: {state: pending}

  - set_pipeline: self
    file: phatik/.concourse/reconfigure-pipelines.yml

- name: configure-pipelines
  <<: *gh-status-handlers
  plan:
  - get: phatik
    passed: [configure-controller,configure-webhook]
    trigger: true

  - put: gh-status
    inputs: [phatik]
    params: {state: pending}

  - set_pipeline: phatik-frontend
    file: phatik/.concourse/phatik-frontend.yml

  - set_pipeline: phatik-frontend-pr
    file: phatik/.concourse/phatik-frontend-pr.yml

  - set_pipeline: phatik-backend
    file: phatik/.concourse/phatik-backend.yml

  - set_pipeline: phatik-backend-pr
    file: phatik/.concourse/phatik-backend-pr.yml

  - set_pipeline: phatik-client-py
    file: phatik/.concourse/phatik-client-py.yml

  - set_pipeline: phatik-client-py-pr
    file: phatik/.concourse/phatik-client-py-pr.yml
